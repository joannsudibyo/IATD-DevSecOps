name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest api_tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: junit/test-results.xml

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write    
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:     
          push: true
          tags: |
            bejoann/devops-lab:tagname

  submit_results:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run Azure CLI in Docker with jq
        uses: azure/login@v1.5.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Check container status and upload reports
        run: |
          docker run --rm -v ${HOME}/.azure:/root/.azure mcr.microsoft.com/azure-cli:latest /bin/sh -c "
            apt-get update && apt-get install -y jq &&
            ACCESS_TOKEN=\$(az account get-access-token | jq -r .accessToken) &&
            echo \"Access Token Acquired\" &&
            export FQDN=\$(az containerapp show -n devops-app -g devsecops-lab --query properties.configuration.ingress.fqdn -o tsv) &&
            echo \"FQDN: \$FQDN\" &&
            WEEK1_APP=\$(curl -X POST -H \"Authorization: Bearer \$ACCESS_TOKEN\" -d \"https://\$FQDN\" https://devsecops-ver.azurewebsites.net/api/week1-app) &&
            echo \"Week1 app upload: \$WEEK1_APP\"
          "
